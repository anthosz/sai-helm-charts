# Default values for mkdocs-material.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: squidfunk/mkdocs-material
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# storage - either an existing pvc, the size for a new pvc, or emptyDir (git requires a pvc)
storage:
  existing: ""
  existingSubpathPrefix: true  # If true, then volume mounts will use mkdocs-material.name as a subpath prefix.
  overrideSubpathPrefix: # If set then this is the value used for the subpath prefix if above property is true
  size: ""
  mode: ReadWriteOnce
  class: default

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

##############################################################
# Option to add the mkdocs-macros-plugin                     #
# See https://mkdocs-macros-plugin.readthedocs.io/en/latest/ #
##############################################################
macrosPlugin:
  enabled: false
  version: 1.3.9       # pip version of mkdocs-macros-plugin
  extraYamlConfigMount: /mkdocs-vars # The name of the volume mount path for extra yaml config files
  # This section is used to pass values that are expected to appear as include_yaml entries
  # in the mkdocs.yaml plugin section configuring the mkdocs-macros-plugin plugin.
  extraYamlConfig: []
  # extraYamlConfig:
  #   - path: vars1.yaml  # paths are relative to the extraYamlConfigMount
  #     values:           # values are copied into the defined structure in the target file
  #       domain: example.net
  #       shortName: myproject
  #       longName: Sample Project
  #   - path: vars2.yaml
  #     values:
  #       color: blue
  #       fruit: banana

  # Sample plugin config snippet from mkdocs.yaml using the files above.
  # Note that you can have a local defaults file in your docs that can be optionally
  # overridden by the files added via this chart. Mkdocs will give a warning if they
  # don't exist locally, but will still build successfully, for example:
  # INFO    -  [macros] - WARNING: YAML configuration file was not found! /mkdocs-vars/vars1.yaml
  # The entries that appear later in the list have precedence of earlier values files.
  # plugins:
  #   - search
  #   - macros:
  #       on_undefined: strict
  #       include_yaml:
  #         - global: local-defaults.yaml
  #         - global: /mkdocs-vars/vars1.yaml
  #         - global: /mkdocs-vars/vars2.yaml

##################
# Git deployment #
##################

## giturl is the url of an MkDocs git repository
giturl: ""

## gitbranch sets which repo branch to publish
gitbranch: ""

## Secret that stores the values of a git credential store helper file
## See https://git-scm.com/docs/git-credential-store
gitCredentialsSecret: ""

## Key in the gitCredentialsSecret with the credentials file: 
## The default value is ".git-credentials"
gitCredentialsSecretKey: ""

## The path relative to the root of the git repo where the docs are located.
gitPath: ""

## pollInterval sets minutes between git pull
pollInterval: 5

# cacert - add custom CA certificate in-line
# cacert: |-
#   -----BEGIN CERTIFICATE-----
#   MIIDGDCCAgCgAwIBAgIUPO57TE7AQJRsMEtzii2SYwZ9TRIwDQYJKoZIhvcNAQEL
#   BQAwJDEiMCAGA1UEAxMZRm91bmRyeSBBcHBsaWFuY2UgUm9vdCBDQTAeFw0yMTAz
#   â€¦
#   -----END CERTIFICATE-----

# If this deployment needs to trust custom ca certificates,
# create a configMap with the needed certificates and specify
# the configMap name here
# certificateMap: "ca-map"

######################
# Non-Git deployment #
######################

## mkdocs YAML configuration
## This can be used to create an mkdocs.yml file if no giturl is provided
## It can also be used to modify the effect of the following fields when a giturl
## is provided and an mkdocs.yml file is included in the git repo
##   site_url: The value provided here will override the value in the git repo
##   site_dir: The value provided here will be used to set the mapping in the nginx container to this path
##             instead of the default value of "site". You should set this to the value that is in your mkdocs.yml file
mkdocs: {}
  # site_name: My Site
  # theme:
  #   name: material

## files populates text files inside /docs
files: {}
  # index.md: |
  #   Welcome to My Site
  #
  # page2.md: |
  #   More content goes here.

# binaryFiles populates binary files inside /docs
binaryFiles: {}
